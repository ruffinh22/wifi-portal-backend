# Docker Compose pour Portail WiFi
version: '3.8'

services:
  wifi-portal:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: wifi-portal-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-your-secret-key-here}
      - PORT=5000
      - SMS_API_KEY=${SMS_API_KEY:-your-sms-api-key}
      - EMAIL_USER=${EMAIL_USER:-your-email@example.com}
      - EMAIL_PASS=${EMAIL_PASS:-your-email-password}
    volumes:
      # Persister la base de données SQLite
      - wifi_portal_db:/app/wifi_portal.db
      # Persister les logs
      - wifi_portal_logs:/app/logs
    restart: unless-stopped
    networks:
      - wifi-portal-network
    
    # Limites de ressources pour éviter la surcharge
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Vérifications de santé
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Service nginx optionnel pour proxy inverse et SSL
  nginx:
    image: nginx:alpine
    container_name: wifi-portal-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - wifi-portal
    restart: unless-stopped
    networks:
      - wifi-portal-network
    profiles:
      - with-nginx

volumes:
  wifi_portal_db:
    driver: local
  wifi_portal_logs:
    driver: local

networks:
  wifi-portal-network:
    driver: bridge